<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://nugabox.github.io/</id><title>NUGALOG</title><subtitle>누가의 개발로그</subtitle> <updated>2022-05-27T21:27:09+09:00</updated> <author> <name>NUGA</name> <uri>https://nugabox.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://nugabox.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://nugabox.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 NUGA </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>sshpass 설치 및 사용법</title><link href="https://nugabox.github.io/posts/sshpass-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%82%AC%EC%9A%A9%EB%B2%95/" rel="alternate" type="text/html" title="sshpass 설치 및 사용법" /><published>2022-05-27T21:26:00+09:00</published> <updated>2022-05-27T21:26:45+09:00</updated> <id>https://nugabox.github.io/posts/sshpass-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%82%AC%EC%9A%A9%EB%B2%95/</id> <content src="https://nugabox.github.io/posts/sshpass-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%82%AC%EC%9A%A9%EB%B2%95/" /> <author> <name>NUGA</name> </author> <category term="OS" /> <category term="Linux" /> <summary> sshpass란 SSHPass는 클라이언트에서 서버로 ssh 접속 시 패스워드 요구 없이 할 수 있는 도구입니다. 클라이언트에서 키 생성(ssh-keygen)하여 서버로 배포(ssh-copy-id)합니다. ssh, scp 수행 시 배치모드로 패스워드를 전달하거나 스크립트에 패스워드를 기재하여 접속이 가능합니다. 설치 LINUX # Ubuntu apt-get install sshpass # RHEL/CentOS yum install sshpass macOS Homebrew에서는 공식적으로 SSHPass 지원을 하지 않으므로 아래 명령어로 직접 다운로드 및 설치를 진행합니다. curl -O -L [https://fossies.org/linux/privat/sshpass-1.0... </summary> </entry> <entry><title>맥 zsh + Oh My Zsh + iTerm2 세팅</title><link href="https://nugabox.github.io/posts/%EB%A7%A5-zsh-Oh-My-Zsh-iTerm2-%EC%84%B8%ED%8C%85/" rel="alternate" type="text/html" title="맥 zsh + Oh My Zsh + iTerm2 세팅" /><published>2022-05-09T01:12:00+09:00</published> <updated>2022-05-09T01:27:36+09:00</updated> <id>https://nugabox.github.io/posts/%EB%A7%A5-zsh-Oh-My-Zsh-iTerm2-%EC%84%B8%ED%8C%85/</id> <content src="https://nugabox.github.io/posts/%EB%A7%A5-zsh-Oh-My-Zsh-iTerm2-%EC%84%B8%ED%8C%85/" /> <author> <name>NUGA</name> </author> <category term="OS" /> <category term="MacOS" /> <summary> 설치 1. zsh 설치 zsh를 HomeBrew로 설치합니다. brew install zsh 2. 설치경로 확인 which zsh #=&amp;gt; /usr/bin/zsh 3. 기본 sh 변경 chsh -s $(which zsh) 4. curl 설치 brew install curl 5. oh-my-zsh 설치 sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" 6. iterm2 설치 brew install --cask iterm2 설정 zsh 설정 vim ~/.zshrc # 테마 변경 (agnoster테마는 현재 디렉토리에서 Git의 상태를 알려줌... </summary> </entry> <entry><title>XCP-ng ISO 저장소 생성 및 갱신 방법</title><link href="https://nugabox.github.io/posts/XenServer-XCP-ng-ISO-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B0%B1%EC%8B%A0/" rel="alternate" type="text/html" title="XCP-ng ISO 저장소 생성 및 갱신 방법" /><published>2022-05-05T11:12:00+09:00</published> <updated>2022-05-05T11:12:00+09:00</updated> <id>https://nugabox.github.io/posts/XenServer-XCP-ng-ISO-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B0%B1%EC%8B%A0/</id> <content src="https://nugabox.github.io/posts/XenServer-XCP-ng-ISO-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B0%B1%EC%8B%A0/" /> <author> <name>NUGA</name> </author> <category term="OS" /> <category term="Linux" /> <summary> 저장소 생성 XenServer 및 XCP-ng에서 운영체제를 설치할 ISO 파일을 사용하기 위해서는 먼저 ISO 저장소를 생성해야 합니다. sr-create 명령어를 사용하여 아래와 같이 옵션을 입력하고 저장소를 생성합니다. xe sr-create name-label=&amp;lt;name&amp;gt; type=iso \ device-config:location=&amp;lt;where iso file exist&amp;gt; \ device-config:legacy_mode=true \ content-type=iso # 예 (xe의 위치가 /var/opt/xen/iso_import/xe인 경우) /var/opt/xen/iso_import/xe sr-create name-label=window... </summary> </entry> <entry><title>Linux 윈도우 공유폴더 마운트</title><link href="https://nugabox.github.io/posts/Linux-%EC%9C%88%EB%8F%84%EC%9A%B0-%EA%B3%B5%EC%9C%A0%ED%8F%B4%EB%8D%94-%EB%A7%88%EC%9A%B4%ED%8A%B8/" rel="alternate" type="text/html" title="Linux 윈도우 공유폴더 마운트" /><published>2022-05-05T08:02:32+09:00</published> <updated>2022-05-05T08:02:32+09:00</updated> <id>https://nugabox.github.io/posts/Linux-%EC%9C%88%EB%8F%84%EC%9A%B0-%EA%B3%B5%EC%9C%A0%ED%8F%B4%EB%8D%94-%EB%A7%88%EC%9A%B4%ED%8A%B8/</id> <content src="https://nugabox.github.io/posts/Linux-%EC%9C%88%EB%8F%84%EC%9A%B0-%EA%B3%B5%EC%9C%A0%ED%8F%B4%EB%8D%94-%EB%A7%88%EC%9A%B4%ED%8A%B8/" /> <author> <name>NUGA</name> </author> <category term="OS" /> <category term="Linux" /> <summary> 윈도우 공유폴더에 바로 연결 마운트 mount -t cifs -o vers=2.0 //[호스트주소]/[폴더] /backup -o username=[아이디],password=[비밀번호] 확인 df -h 재부팅 시 자동 연결 (재부팅 시 시간이 오래 걸리므로 비추천) /etc/fstab 설정 파일에 내용 추가 vim /etc/fstab mount -t cifs -o vers=2.0 //[호스트주소]/[폴더] /backup -o username=[아이디],password=[비밀번호] 마운트 mount /backup 확인 df -h 마운트 해제 umount /backup Trouble Shooting Target is busy fuser -ck /backup (사용하고 있... </summary> </entry> <entry><title>Linux Rsync 설정</title><link href="https://nugabox.github.io/posts/Linux-Rsync-%EC%84%A4%EC%A0%95/" rel="alternate" type="text/html" title="Linux Rsync 설정" /><published>2022-05-05T06:44:40+09:00</published> <updated>2022-05-05T06:44:40+09:00</updated> <id>https://nugabox.github.io/posts/Linux-Rsync-%EC%84%A4%EC%A0%95/</id> <content src="https://nugabox.github.io/posts/Linux-Rsync-%EC%84%A4%EC%A0%95/" /> <author> <name>NUGA</name> </author> <category term="OS" /> <category term="Linux" /> <summary> rsync 사용법 rsync 명령어는 원본데이터가 있는 서버에서 백업서버로 하는 것이 아닌, 백업서버에서 원본데이터가 있는 서버로 접근하는 방식입니다. 기본 명령어 파라미터 rsync [옵션] [백업할원본의주소:경로] [백업받을경로] -a : 심볼릭링크, 속성, 퍼미션, 소유권 등 보존 -v : 진행상황을 상세하게 보여줌 -z : 전송시 압축을 함 -u : 새로운 파일을 덮어쓰지 않음 –delete : 서버 쪽에 없고 클라이언트 쪽에만 있는 파일을 백업시 지움 –progress : 진행을 %로 보여줌 –stats : 상태 출력 –log-file=/home/util/file.log : 로그 남기기 rsync -avPz -l -t -e ssh 계정명@원본호스트주소:원본경로... </summary> </entry> </feed>
